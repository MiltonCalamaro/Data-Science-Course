pag <-'s?k=aspiradoras&page=11&qid=1591437463&ref=sr_pg_11'
lista_paginas<-c(11:20)
### Extrayendo todos los links de las home_pages
pag<-str_replace(pag,'page=11',paste0('page=',lista_paginas))
pag<-str_replace(pag,'sr_pg_11',paste0('sr_pg_',lista_paginas))
##############################################################
#obtencion de url de cada producto
#############################################################
## concatenar las url de las homepages
paginas<-paste0('https://www.amazon.es/',pag)
paginas
library(stringr)
pag <-'s?k=aspiradoras&page=11&qid=1591437463&ref=sr_pg_11'
pag <-'s?k=aspiradoras&page=11&qid=1591437463&ref=sr_pg_11'
pag <-'s?k=aspiradoras&page=11&qid=1591437463&ref=sr_pg_11'
library(rvest)
url<-'https://www.amazon.com/s?k=aspiradoras&ref=nb_sb_noss_1'
selector<-'#search > div.s-desktop-width-max.s-desktop-content.sg-row > div.sg-col-20-of-24.sg-col-28-of-32.sg-col-16-of-20.sg-col.sg-col-32-of-36.sg-col-8-of-12.sg-col-12-of-16.sg-col-24-of-28 > div > span:nth-child(5) > div.s-main-slot.s-result-list.s-search-results.sg-row > div:nth-child(1) > div > span > div > div > div > div > div:nth-child(2) > div.sg-col-4-of-12.sg-col-8-of-16.sg-col-16-of-24.sg-col-12-of-20.sg-col-24-of-32.sg-col.sg-col-28-of-36.sg-col-20-of-28 > div > div:nth-child(1) > div > div > div:nth-child(1) > h2 > a'
pagina<-read_html(url)
nodo<-html_node(pagina,selector)
#nodo_text <-html_text(nodo)
nodo_links<-html_attr(nodo,'href')
nodo_links
urlcompleta<-paste0('https://www.amazon.es',nodo_links)
#https://www.amazon.com/s?k=aspiradoras&page=2&qid=1591420155&ref=sr_pg_2
#https://www.amazon.com/s?k=aspiradoras&page=3&qid=1591420155&ref=sr_pg_3
library(stringr)
pag <-'s?k=aspiradoras&page=11&qid=1591437463&ref=sr_pg_11'
lista_paginas<-c(0:20)
### Extrayendo todos los links de las home_pages
pag<-str_replace(pag,'page=11',paste0('page=',lista_paginas))
pag<-str_replace(pag,'sr_pg_11',paste0('sr_pg_',lista_paginas))
pag
paginas<-paste0('https://www.amazon.es/',pag)
paginas
dameLinksPagina<-function(url){
selector<-'div > div:nth-child(1) > div > div > div:nth-child(1) > h2 > a'
pagina<-read_html(url)###como el request
nodo<-html_nodes(pagina,selector)### para obtener todos los links de esa pagina
#nodo_text <-html_text(nodo)
nodo_links<-html_attr(nodo,'href')
}
test<-dameLinksPagina(paginas[3])
test
linksAsp<-sapply(paginas,dameLinksPagina)### sapply para aplicar sobre una función
linksAsp
length(linksAsp)
vlink <- as.vector(linksAsp) ### convertir la matriz en vector
length(vlink)
vlink
vlink[0]
vlink[1]
vlink[2]
vlink[0]
is.na(vlink[0])
length(vlink[0])
vlink[length(vlink)>0]
vlink<-vlink[length(vlink)>0]
vlink
length(vlink)
print(i)
print(i)
vlinksAspiradora<-paste0('https://amazon.es/',vlink)
vlinksAspiradora<-paste0('https://amazon.es/',vlink)
length(vlinksAspiradora)
vlinksAspiradora
for i in vlinksAspiradora:
for j in i:
print(j)
for (j in i){
print(j)
}
for (i in vlinksAspiradora){
for (j in i){
j
}
}
vlinksAspiradora
getArticulo<-function(url){
pagina_web<-read_html(url) ### es como el beautifulSoup
print(url)
nombre<-'#productTitle'
nombre_nodo<-html_node(pagina_web, nombre) ### Es como aplicar el soup.find()
nombre_texto<-html_text(nombre_nodo)
nombre_texto
opiniones<-'#acrCustomerReviewText'
opiniones_nodo<-html_node(pagina_web, opiniones) ### Es como aplicar el soup.find()
opiniones_texto<-html_text(opiniones_nodo)
opiniones_texto
precio<-'#priceblock_ourprice'
precio_nodo<-html_node(pagina_web, precio) ### Es como aplicar el soup.find()
precio_texto<-html_text(precio_nodo)
precio_texto
#tabla<-'#productDetails_detailBullets_sections1'
tabla<-'#prodDetails > div > div.column.col1 > div > div.content.pdClearfix > div > div > table'
tabla_nodo<-html_node(pagina_web,tabla)
if (!is.na(tabla_nodo)){
tabla_tab<-html_table(tabla_nodo)
class(tabla_tab)
val<-tabla_tab$X2
val
res_tabla<-data.frame(t(val))
res_tabla
tabla_name<-tabla_tab$X1
colnames(res_tabla)<-tabla_name
res_tabla
}
### estos serian los nombres de columnas de las tablas
col<-c('Peso del Producto','Dimensiones del Producto','Volumen','Potencia')
if(length(res_tabla)==0){
#No hay detalles , todo a -1
mitab<-data.frame(colnames(col))
mitab<-rbind(mitab, c('-1','-1','-1','-1'))
colnames(mitab)<-col
}else{
#Evaluar cada uno de los atributos
zero<-matrix('-1',ncol = 4, nrow = 1)
dfzero<-as.data.frame(zero)
colnames(dfzero)<-col
peso<-as.character(res_tabla$`Peso del producto`)
if (length(peso)==0) peso<-'-1'
dime<-as.character(res_tabla$`Dimensiones del producto`)
if (length(dime)==0) dime<-'-1'
potencia<-as.character(res_tabla$Potencia)
if (length(potencia)==0) potencia<-'-1'
volumen<-as.character(res_tabla$Volumen)
if (length(volumen)==0) volumen<-'-1'
dfzero$'Peso del producto'<-peso
dfzero$'Dimensiones del producto'<-dime
dfzero$Potencia<-potencia
dfzero$Volumen<-volumen
mitab<-dfzero
colnames(mitab)<-col
}
articulo<-c(nombre_texto, precio_texto,opiniones_texto,
as.character(mitab$`Peso del Producto`[1]),
as.character(mitab$`Dimensiones del Producto`[1]),
as.character(mitab$Potencia[1]),
as.character(mitab$Volumen[1]))
}
resultado_datos<-sapply(vlinksAspiradora, getArticulo)
library(rvest)
library(rvest)
url<-'https://www.amazon.com/s?k=aspiradoras&ref=nb_sb_noss_1'
selector<-'#search > div.s-desktop-width-max.s-desktop-content.sg-row > div.sg-col-20-of-24.sg-col-28-of-32.sg-col-16-of-20.sg-col.sg-col-32-of-36.sg-col-8-of-12.sg-col-12-of-16.sg-col-24-of-28 > div > span:nth-child(5) > div.s-main-slot.s-result-list.s-search-results.sg-row > div:nth-child(1) > div > span > div > div > div > div > div:nth-child(2) > div.sg-col-4-of-12.sg-col-8-of-16.sg-col-16-of-24.sg-col-12-of-20.sg-col-24-of-32.sg-col.sg-col-28-of-36.sg-col-20-of-28 > div > div:nth-child(1) > div > div > div:nth-child(1) > h2 > a'
pagina<-read_html(url)
nodo<-html_node(pagina,selector)
#nodo_text <-html_text(nodo)
nodo_links<-html_attr(nodo,'href')
nodo_links
urlcompleta<-paste0('https://www.amazon.es',nodo_links)
#https://www.amazon.com/s?k=aspiradoras&page=2&qid=1591420155&ref=sr_pg_2
#https://www.amazon.com/s?k=aspiradoras&page=3&qid=1591420155&ref=sr_pg_3
library(stringr)
pag <-'s?k=aspiradoras&page=11&qid=1591437463&ref=sr_pg_11'
lista_paginas<-c(0:20)
### Extrayendo todos los links de las home_pages
pag<-str_replace(pag,'page=11',paste0('page=',lista_paginas))
pag<-str_replace(pag,'sr_pg_11',paste0('sr_pg_',lista_paginas))
## concatenar las url de las homepages
paginas<-paste0('https://www.amazon.es/',pag)
paginas
dameLinksPagina<-function(url){
selector<-'div > div:nth-child(1) > div > div > div:nth-child(1) > h2 > a'
pagina<-read_html(url)###como el request
nodo<-html_nodes(pagina,selector)### para obtener todos los links de esa pagina
#nodo_text <-html_text(nodo)
nodo_links<-html_attr(nodo,'href')
}
test<-dameLinksPagina(paginas[3])
test
test<-dameLinksPagina(paginas[1])
test<-dameLinksPagina(paginas[20])
linksAsp<-sapply(paginas,dameLinksPagina)### sapply para aplicar sobre una función
linksAsp
class(linksAsp) ### es una matrix
linksAsp[0]
linksAsp[1]
linksAsp[length(linksAsp)>1]
class(linksAsp[length(linksAsp)>1])
length(linksAsp[length(linksAsp)>1])
length(linksAsp)
linksAsp[1]
linksAsp[2]
linksAsp[3]
#linksAsp<-test                                      ### varios datos
#3
linksAsp[4]
#linksAsp<-test                                      ### varios datos
#3,4
linksAsp[5]
#linksAsp<-test                                      ### varios datos
#3,4,5
linksAsp[6]
#linksAsp<-test                                      ### varios datos
#3,4,5
linksAsp[7]
#linksAsp<-test                                      ### varios datos
#3,4,5
linksAsp[8]
#linksAsp<-test                                      ### varios datos
#3,4,5,8
linksAsp[9]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9
linksAsp[10]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10
linksAsp[11]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10,11
linksAsp[12]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10,11
linksAsp[13]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10,11
linksAsp[14]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10,11,14
linksAsp[15]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10,11,14
linksAsp[16]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10,11,14
linksAsp[17]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10,11,14
linksAsp[18]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10,11,14,18
linksAsp[19]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10,11,14,18,19
linksAsp[20]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10,11,14,18,19,20
linksAsp[c(3,4,5,8,9,10,11,14,18,19,20)]
#linksAsp<-test                                      ### varios datos
#3,4,5,8,9,10,11,14,18,19,20
linksAsp<-linksAsp[c(3,4,5,8,9,10,11,14,18,19,20)]
class(linksAsp) ### es una matrix
length(linksAsp)
as.matrix(linksAsp)
linksAsp<-as.matrix(linksAsp)
class(linksAsp) ### es una matrix
dim(linksAsp) ### de dimension 22 x 10
linksAsp
linksAsp
linksAsp<-sapply(paginas,dameLinksPagina)### sapply para aplicar sobre una función
linksAsp
linksAsp[c(3,4,5,8,9,10,11,14,18,19,20)]
linksAsp[1]
#1,
linksAsp[2]
#1,2
linksAsp[3]
#1,2,3
linksAsp[4]
#1,2,3
linksAsp[5]
#1,2,3,5
linksAsp[6]
#1,2,3,5
linksAsp[7]
#1,2,3,5
linksAsp[8]
#1,2,3,5,8
linksAsp[9]
#1,2,3,5,8
linksAsp[10]
#1,2,3,5,8,10
linksAsp[11]
#1,2,3,5,8,10
linksAsp[12]
#1,2,3,5,8,10
linksAsp[13]
#1,2,3,5,8,10,13
linksAsp[14]
#1,2,3,5,8,10,13
linksAsp[15]
#1,2,3,5,8,10,13,15
linksAsp[16]
#1,2,3,5,8,10,13,15,
linksAsp[17]
#1,2,3,5,8,10,13,15,
linksAsp[18]
#1,2,3,5,8,10,13,15,
linksAsp[19]
#1,2,3,5,8,10,13,15,
linksAsp[20]
#1,2,3,5,8,10,13,15,20
linksAsp[c(1,2,3,5,8,10,13,15,20)]
dim(ax.matrix(linksAsp))
dim(ax.matrix(linksAsp))
ax.matrix(linksAsp)
#1,2,3,5,8,10,13,15,20
linksAsp<-linksAsp[c(1,2,3,5,8,10,13,15,20)]
#linksAsp<-as.matrix(linksAsp)
dim(as.matrix(linksAsp))
linksAsp
#linksAsp<-as.matrix(linksAsp)
dim(as.vector(linksAsp))
#linksAsp<-as.matrix(linksAsp)
length(as.vector(linksAsp))
as.data.frame(linksAsp)
linksAsp
print(linksAsp[i])
for (i in length(linksAsp)){
print(linksAsp[i])
}
print(linksAsp[i][j])
for (i in length(linksAsp)){
for (j in length(linksAsp[i])){
print(linksAsp[i][j])
}
}
for (i in length(linksAsp)){
for (j in length(linksAsp[i])){
print(linksAsp[i][j])
}
}
a<-c()
a[0]=1
a
a<-c()
a[1]=1
a
cont<-1
aux<-c()
for (i in length(linksAsp)){
for (j in length(linksAsp[i])){
aux[cont]<-linksAsp[i][j]
cont<-cont+1
}
}
length(aux)
aux
class(aux)
as.vector(aux)
length(as.vector(aux))
cont<-1
aux<-c()
for (i in length(linksAsp)){
for (j in length(linksAsp[i])){
aux[cont]<-linksAsp[i][j]
cont<-cont+1
}
}
cont
cont<-1
aux<-c()
for (i in 1:length(linksAsp)){
for (j in 1:length(linksAsp[i])){
aux[cont]<-linksAsp[i][j]
cont<-cont+1
}
}
cont
aux
length(aux)
cont
cont<-1
aux<-c()
for (i in 1:length(linksAsp)){
for (j in 1:length(linksAsp[i])){
aux[cont]<-linksAsp[i][j]
cont<-cont+1
}
}
cont
linksAsp<-sapply(paginas,dameLinksPagina)### sapply para aplicar sobre una función
linksAsp
cont<-1
aux<-c()
for (i in 1:length(linksAsp)){
if (length(linksAsp[i]>5))
aux[cont]<-linksAsp[i]
}
cont<-1
aux<-c()
for (i in 1:length(linksAsp)){
if (length(linksAsp[i]>5)){
aux[cont]<-linksAsp[i]
}
}
cont<-1
aux<-c()
for (i in 1:length(linksAsp)){
if (length(linksAsp[i])>5){
aux[cont]<-linksAsp[i]
}
}
cont<-1
aux<-c()
for (i in 1:length(linksAsp)){
if (length(linksAsp[i])>5){
aux[cont]<-linksAsp[i]
cont<-cont+1
}
}
cont
cont<-1
aux<-c()
for (i in 1:length(linksAsp)){
if (length(linksAsp[i])>5){
aux[cont]<-linksAsp[i]
}
cont<-cont+1
}
cont
aux
cont<-1
aux<-c()
for (i in 1:length(linksAsp)){
if (length(linksAsp[i])>1){
aux[cont]<-linksAsp[i]
cont<-cont+1
}
}
cont
linksAsp<-sapply(paginas,dameLinksPagina)### sapply para aplicar sobre una función
linksAsp
class(linksAsp) ### es una matrix
linksAsp[1]
linksAsp[1][0]
linksAsp[1][1]
linksAsp[1][2]
linksAsp[1][4]
linksAsp[2][4]
linksAsp[2][1]
linksAsp[3][1]
linksAsp[4][1]
linksAsp[5][1]
linksAsp[5][2]
linksAsp[5][1]
length(linksAsp[5][1])
length(linksAsp[5][1][1])
length(linksAsp[5][1][2])
linksAsp[5][1][2]
linksAsp[5][1][1]
##################################################
## Extraer las url de los homepages
##################################################
library(rvest)
url<-'https://www.amazon.com/s?k=aspiradoras&ref=nb_sb_noss_1'
selector<-'#search > div.s-desktop-width-max.s-desktop-content.sg-row > div.sg-col-20-of-24.sg-col-28-of-32.sg-col-16-of-20.sg-col.sg-col-32-of-36.sg-col-8-of-12.sg-col-12-of-16.sg-col-24-of-28 > div > span:nth-child(5) > div.s-main-slot.s-result-list.s-search-results.sg-row > div:nth-child(1) > div > span > div > div > div > div > div:nth-child(2) > div.sg-col-4-of-12.sg-col-8-of-16.sg-col-16-of-24.sg-col-12-of-20.sg-col-24-of-32.sg-col.sg-col-28-of-36.sg-col-20-of-28 > div > div:nth-child(1) > div > div > div:nth-child(1) > h2 > a'
pagina<-read_html(url)
nodo<-html_node(pagina,selector)
#nodo_text <-html_text(nodo)
nodo_links<-html_attr(nodo,'href')
nodo_links
urlcompleta<-paste0('https://www.amazon.es',nodo_links)
#https://www.amazon.com/s?k=aspiradoras&page=2&qid=1591420155&ref=sr_pg_2
#https://www.amazon.com/s?k=aspiradoras&page=3&qid=1591420155&ref=sr_pg_3
library(stringr)
pag <-'s?k=aspiradoras&page=11&qid=1591437463&ref=sr_pg_11'
lista_paginas<-c(0:10)
pag <-'s?k=aspiradoras&page=2&qid=1591437463&ref=sr_pg_2'
lista_paginas<-c(0:10)
### Extrayendo todos los links de las home_pages
pag<-str_replace(pag,'page=2',paste0('page=',lista_paginas))
pag<-str_replace(pag,'sr_pg_2',paste0('sr_pg_',lista_paginas))
## concatenar las url de las homepages
paginas<-paste0('https://www.amazon.es/',pag)
paginas
pag <-'s?k=aspiradoras&page=2&qid=1591437463&ref=sr_pg_2'
lista_paginas<-c(1:10)
### Extrayendo todos los links de las home_pages
pag<-str_replace(pag,'page=2',paste0('page=',lista_paginas))
### Extrayendo todos los links de las home_pages
pag<-str_replace(pag,'page=2',paste0('page=',lista_paginas))
pag<-str_replace(pag,'sr_pg_2',paste0('sr_pg_',lista_paginas))
pag <-'s?k=aspiradoras&page=2&qid=1591437463&ref=sr_pg_2'
lista_paginas<-c(1:10)
### Extrayendo todos los links de las home_pages
pag<-str_replace(pag,'page=2',paste0('page=',lista_paginas))
pag<-str_replace(pag,'sr_pg_2',paste0('sr_pg_',lista_paginas))
## concatenar las url de las homepages
paginas<-paste0('https://www.amazon.es/',pag)
paginas
dameLinksPagina<-function(url){
selector<-'div > div:nth-child(1) > div > div > div:nth-child(1) > h2 > a'
pagina<-read_html(url)###como el request
nodo<-html_nodes(pagina,selector)### para obtener todos los links de esa pagina
#nodo_text <-html_text(nodo)
nodo_links<-html_attr(nodo,'href')
}
test<-dameLinksPagina(paginas[3])
test
test<-dameLinksPagina(paginas[3])
linksAsp<-sapply(paginas,dameLinksPagina)### sapply para aplicar sobre una función
pag <-'s?k=aspiradoras&page=2&qid=1591437463&ref=sr_pg_2'
lista_paginas<-c(0:10)
### Extrayendo todos los links de las home_pages
pag<-str_replace(pag,'page=2',paste0('page=',lista_paginas))
pag<-str_replace(pag,'sr_pg_2',paste0('sr_pg_',lista_paginas))
## concatenar las url de las homepages
paginas<-paste0('https://www.amazon.es/',pag)
paginas
paginas
dameLinksPagina<-function(url){
selector<-'div > div:nth-child(1) > div > div > div:nth-child(1) > h2 > a'
pagina<-read_html(url)###como el request
nodo<-html_nodes(pagina,selector)### para obtener todos los links de esa pagina
#nodo_text <-html_text(nodo)
nodo_links<-html_attr(nodo,'href')
}
test<-dameLinksPagina(paginas[3])
linksAsp<-sapply(paginas,dameLinksPagina)### sapply para aplicar sobre una función
linksAsp
